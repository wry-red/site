---
import { Icon } from "astro-icon/components";
import { LOCALE } from "@/config";
import { format, formatDistanceToNow, type Locale } from "date-fns";
import { zhCN } from "date-fns/locale";

export interface Props {
  readonly pubDatetime: string | Date;
  readonly modDatetime: string | Date | undefined | null;
  readonly size?: "sm" | "lg";
  readonly class?: string;
}

const { formatString, langTag } = LOCALE;
const locale = ({ "zh-CN": zhCN } as Record<string, Locale>)[langTag];

const { pubDatetime, modDatetime, size = "sm", class: className } = Astro.props;

const datetime = new Date(
  modDatetime && modDatetime > pubDatetime ? modDatetime : pubDatetime
);

const displayDatetime = `${format(datetime, formatString)} · ${formatDistanceToNow(datetime, { locale })}`;

const ISODatetime = datetime.toISOString();
---

<div
  data-loading-cloak
  class:list={[
    "flex items-center gap-1 font-medium text-skin-base/60 transition-opacity",
    className,
  ]}
>
  <Icon
    name={modDatetime && modDatetime > pubDatetime
      ? "tabler:calendar-up"
      : "tabler:calendar-dot"}
    class:list={[
      "h-6 w-6",
      size === "sm" ? "scale-90 text-sm" : "scale-100 text-base",
    ]}
  />
  <span class="sr-only">
    {modDatetime && modDatetime > pubDatetime ? "Updated:" : "Published:"}
  </span>
  <time
    data-format-string={formatString}
    data-pagefind-sort="date[datetime]"
    data-tooltip={ISODatetime}
    datetime={ISODatetime}
    class="!no-underline"
  >
    {displayDatetime}
  </time>
</div>

<script>
  import { format, formatDistanceToNow } from "date-fns";
  import { zhCN } from "date-fns/locale";
  import { attach } from "@/utils/useDom";

  const locale = { "zh-CN": zhCN }[
    Intl.DateTimeFormat().resolvedOptions().locale
  ];

  function formatDatetime() {
    document
      .querySelectorAll<HTMLTimeElement>("time[datetime]")
      .forEach(time => {
        time.innerText = `${format(time.dateTime, time.dataset.formatString!)} · ${formatDistanceToNow(time.dateTime, { locale })}`;
        delete time.parentElement!.dataset.loadingCloak;
      });
  }

  attach(formatDatetime);
</script>
